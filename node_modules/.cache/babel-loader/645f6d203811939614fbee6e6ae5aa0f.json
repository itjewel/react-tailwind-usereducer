{"ast":null,"code":"import _slicedToArray from \"/var/www/html/react-tailwind-usereducer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/var/www/html/react-tailwind-usereducer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/var/www/html/react-tailwind-usereducer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _templateObject,\n  _this = this,\n  _jsxFileName = \"/var/www/html/react-tailwind-usereducer/src/components/reducer/index.jsx\";\nimport React, { useReducer, useState } from 'react';\nimport { Button } from '../../components/button';\nimport styled from 'styled-components';\nvar ButtonsContainer = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  \", \";\\n\"])), {\n  \"marginTop\": \"1rem\",\n  \"display\": \"flex\",\n  \"flexWrap\": \"wrap\"\n});\nvar initialState = {\n  countd: 2\n};\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return _objectSpread({}, state, {\n        countd: state.countd + action.value\n      });\n      break;\n    case \"DECREMENT\":\n      return _objectSpread({}, state, {\n        countd: state.countd - action.value\n      });\n      break;\n    case \"RESET\":\n      return _objectSpread({}, state, {\n        countd: 0\n      });\n      break;\n    default:\n      return state;\n  }\n}\nvar Countreducer = function Countreducer() {\n  var _useReducer = useReducer(reducer, initialState),\n    _useReducer2 = _slicedToArray(_useReducer, 2),\n    countvalue = _useReducer2[0],\n    dispatch = _useReducer2[1];\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, \"Counts:   \", countvalue.countd), /*#__PURE__*/React.createElement(ButtonsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    text: \"+\",\n    onClick: function onClick() {\n      return dispatch({\n        type: \"INCREMENT\",\n        value: 5\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"-\",\n    onClick: function onClick() {\n      return dispatch({\n        type: \"DECREMENT\",\n        value: 3\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Reset\",\n    onClick: function onClick() {\n      return dispatch({\n        type: \"RESET\"\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Countreducer;","map":{"version":3,"names":["React","useReducer","useState","Button","styled","ButtonsContainer","div","_templateObject","_taggedTemplateLiteral","initialState","countd","reducer","state","action","type","_objectSpread","value","Countreducer","_useReducer","_useReducer2","_slicedToArray","countvalue","dispatch","createElement","Fragment","__self","_this","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick"],"sources":["/var/www/html/react-tailwind-usereducer/src/components/reducer/index.jsx"],"sourcesContent":["import React, {useReducer, useState} from 'react'\nimport { Button } from '../../components/button'\nimport styled from 'styled-components';\nimport tw from 'twin.macro';\nconst ButtonsContainer = styled.div`\n  ${tw`\n    flex\n    flex-wrap\n    mt-4\n  `};\n`;\n\nconst initialState = {\n    countd: 2\n}\nfunction reducer(state, action){\n    switch(action.type){\n        case \"INCREMENT\":\n            return {...state, countd: state.countd + action.value}\n            break;\n        case \"DECREMENT\":\n            return {...state, countd: state.countd - action.value}\n            break;\n        case \"RESET\":\n            return {...state, countd: 0}\n            break;\n        default: \n        return state;\n\n    }\n\n}\n\nconst Countreducer = () => {\n    const [countvalue, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n    <div>Counts:   {countvalue.countd}</div>\n    <ButtonsContainer>\n        <Button text=\"+\" onClick={()=>dispatch({type:\"INCREMENT\", value:5})} />\n        <Button  text=\"-\"  onClick={()=>dispatch({type: \"DECREMENT\", value: 3})}/>\n        <Button  text=\"Reset\"  onClick={()=>dispatch({type:\"RESET\"})}/>\n    </ButtonsContainer>\n    </>\n  )\n}\n\nexport default Countreducer"],"mappings":";;;;;;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,QAAO,OAAO;AACjD,SAASC,MAAM,QAAQ,yBAAyB;AAChD,OAAOC,MAAM,MAAM,mBAAmB;AAEtC,IAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAG,CAAAC,eAAA,KAAAA,eAAA,GAAAC,sBAAA,oBAC7B;EAAA;EAAA;EAAA;AAIJ,CAAC,CACF;AAED,IAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE;AACZ,CAAC;AACD,SAASC,OAAOA,CAACC,KAAK,EAAEC,MAAM,EAAC;EAC3B,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,WAAW;MACZ,OAAAC,aAAA,KAAWH,KAAK;QAAEF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACG;MAAK;MACrD;IACJ,KAAK,WAAW;MACZ,OAAAD,aAAA,KAAWH,KAAK;QAAEF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACG;MAAK;MACrD;IACJ,KAAK,OAAO;MACR,OAAAD,aAAA,KAAWH,KAAK;QAAEF,MAAM,EAAE;MAAC;MAC3B;IACJ;MACA,OAAOE,KAAK;EAAC;AAIrB;AAEA,IAAMK,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;EAAA,IAAAC,WAAA,GACQjB,UAAU,CAACU,OAAO,EAAEF,YAAY,CAAC;IAAAU,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAAzDG,UAAU,GAAAF,YAAA;IAAEG,QAAQ,GAAAH,YAAA;EAC7B,oBACEnB,KAAA,CAAAuB,aAAA,CAAAvB,KAAA,CAAAwB,QAAA,qBACAxB,KAAA,CAAAuB,aAAA;IAAAE,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,YAAU,EAACV,UAAU,CAACX,MAAM,CAAO,eACxCV,KAAA,CAAAuB,aAAA,CAAClB,gBAAgB;IAAAoB,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACb/B,KAAA,CAAAuB,aAAA,CAACpB,MAAM;IAAC6B,IAAI,EAAC,GAAG;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAIX,QAAQ,CAAC;QAACR,IAAI,EAAC,WAAW;QAAEE,KAAK,EAAC;MAAC,CAAC,CAAC;IAAA,CAAC;IAAAS,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAG,eACvE/B,KAAA,CAAAuB,aAAA,CAACpB,MAAM;IAAE6B,IAAI,EAAC,GAAG;IAAEC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAIX,QAAQ,CAAC;QAACR,IAAI,EAAE,WAAW;QAAEE,KAAK,EAAE;MAAC,CAAC,CAAC;IAAA,CAAC;IAAAS,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,eAC1E/B,KAAA,CAAAuB,aAAA,CAACpB,MAAM;IAAE6B,IAAI,EAAC,OAAO;IAAEC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAIX,QAAQ,CAAC;QAACR,IAAI,EAAC;MAAO,CAAC,CAAC;IAAA,CAAC;IAAAW,MAAA,EAAAC,KAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,EAAE,CAChD,CAChB;AAEP,CAAC;AAED,eAAed,YAAY"},"metadata":{},"sourceType":"module"}